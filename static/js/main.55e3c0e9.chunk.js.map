{"version":3,"sources":["i18n/index.tsx","store/Reactor.tsx","actions/ReactorActions.tsx","actions/LanguageActions.tsx","components/Navigation.tsx","components/ReactorSimulationPage.tsx","components/StepTracker.tsx","components/SizeSelector.tsx","components/ReactorView.tsx","components/ReactorRodsTable.tsx","components/ReactorCreationPage.tsx","components/ReactorTotalHeatChart.tsx","App.tsx","serviceWorker.ts","reducers/ReactorReducer.tsx","reducers/LanguageReducer.tsx","reducers/index.tsx","index.tsx","configureStore.tsx"],"names":["zh_Hans","Lang","Title","ChangeLanguage","CreateReactor","InputSize","ReactorSize","Length","Width","Rods","AddRods","ReactorPreview","ReactorSimulation","ReactorRodList","RodType","X","Y","Size","Size1By1","Size2By2","NoRecords","RodPositionCollided","RodPositionIllegal","RodAdded","RodUpdated","RodDeleted","RodNotFound","AddRow","EditRow","DeleteRow","DeleteRowConfirm","CancelEdit","SaveEdit","SimulationBegin","Next","Prev","Empty","Time","Sec","ControlPanel","ShowContent","HU","TotalHeat","Neutrons","NeutronsCount","Statistics","HeatChart","Maxinum","CopyToClipboard","SolutionCopied","PasteSolutionHere","SolutionCode","SolutionLoaded","SolutionCodeError","Cancel","Ok","LoadSolution","About","AboutAuthor","AboutVersion","AboutGregVersion","AboutLicense","NeutronAbsorber","NeutronReflector","Thorium230","Cyanite","Uranium238","Uranium235","Yellorium","Plutonium244","Plutonium241","Plutonium243","Blutonium","Americium245","Americium241","Ludicrite","Cobalt60","EnrichedNaquadah","Naquadria","collections","en","defaultLocalization","useI18n","languageState","useSelector","state","language","code","languageCode","currentLocalization","result","i18n","ReactorRodTypes","ReactorCoolantType","ReactorRodTypeIndecies","Object","keys","filter","key","isNaN","Number","map","ReactorRodColor","Map","ReactorRodDuablility","Infinity","ReactorRodEmissionSelf","ReactorRodEmissionOthers","ReactorRodFactor","NaN","ReactorActionTypes","LanguageActionTypes","divup","a","b","Math","floor","Array2D","rows","columns","defaultValue","Array","from","length","ArrayEqual","every","value","index","Reactor","width","rods","timeLimit","totalNeutrons","receivedNeutrons","energyGenerated","durability","this","rod","get","type","reactorMap","r","currentRod","x","y","size","nextState","prevReceivedNeutrons","fill","durabilityCost","emissionSelf","emissionOthers","factor","dx","dy","k","ax","ay","ar","adjentRod","minStep","limit","min","forEach","time","prevTime","set","prevTotalNeutrons","prevEnergyGenerated","Error","nextResult","minStepResult","current","recieved","energy","i","push","heat","rodSize","isFirst","DisplayContentType","useStyles","makeStyles","theme","root","flexGrow","title","menuButton","marginRight","spacing","select","alignItems","color","selectIcon","selectInputRoot","translateIcon","toolbar","Navigation","classes","dispatch","useDispatch","enqueueSnackbar","useSnackbar","reactorState","reactor","React","useState","solutionText","setSolutionText","solutionDialogOpen","setSolutionDialogOpen","aboutDialogOpen","setAboutDialogOpen","handleAboutDialogClose","handleSolutionDialogCancel","className","AppBar","position","Toolbar","Typography","variant","Select","autoWidth","disableUnderline","inputProps","icon","onChange","event","SetLanguage","target","startAdornment","MenuItem","component","onSuccess","option-text","JSON","stringify","item","Tooltip","IconButton","edge","onClick","Dialog","fullWidth","maxWidth","onClose","open","DialogTitle","DialogContent","DialogContentText","TextField","autoFocus","label","margin","multiline","DialogActions","Button","solution","parse","isArray","isInteger","SetLength","SetWidth","SetRods","e","Link","href","rel","StepTracker","step","Stepper","activeStep","stepProps","completed","Step","StepLabel","fontSize","control","flex","SizeSelector","endAdornment","InputAdornment","Grid","container","lg","md","sm","xs","InputProps","visualColors","values","generateVisualMap","isPreview","dimension","show","pieces","max","calculable","orient","left","bottom","generateData","data","generateLabel","suffix","labelVisual","normal","formatter","params","textStyle","labelHeat","displayData","ReactorView","ratio","marginTop","marginBottom","marginLeft","option","grid","top","xAxis","yAxis","inverse","series","name","emphasis","itemStyle","shadowBlur","shadowColor","tooltip","animation","visualMap","style","minHeight","height","padding","input","tableIcons","Add","forwardRef","props","ref","Check","Clear","Delete","DetailPanel","Edit","Export","Filter","FirstPage","LastPage","NextPage","PreviousPage","ResetSearch","Search","SortArrow","ThirdStateCheck","ViewColumn","cleanData","ReactorRodsTable","rodTypeLookupTable","fromEntries","isRodPositionSame","findRod","findIndex","isRodConflict","isPositionPossible","getNumericInputBounded","minValue","maxValue","field","lookup","initialEditValue","1","2","editComponent","editable","onRowAdd","newData","some","Promise","reject","resolve","onRowUpdate","oldData","onRowDelete","splice","icons","localization","header","actions","body","addTooltip","deleteTooltip","editTooltip","editRow","cancelTooltip","saveTooltip","deleteText","emptyDataSourceMessage","options","search","paging","card","ReactorCreationPage","reactorData","getVisualMap","Card","CardHeader","CardContent","cardOthers","cardContent","justifyContent","slider","ReactorSimulationPage","setTime","contentType","setContentType","dataHeat","useMemo","getHeatMap","dataHeatIndecies","dataHeatIndexBound","undefined","currentData","dataHeatIndex","currentDataHeat","currentDataNeutrons","reduce","acc","_","getSuffix","includes","Slider","marks","toLocaleString","newValue","dataHeatSometime","ReactorTotalHeatChart","text","nameTextStyle","axisLabel","boundaryGap","areaStyle","symbolSize","markPoint","graphic","z","font","app","content","button","cardSmall","App","setStep","Box","display","flexDirection","children","cardWrapper","prevButton","nextButton","mb","ml","mr","mt","getButtons","Boolean","window","location","hostname","match","initialState","reactorReducer","action","LanguageReducer","rootReducer","combineReducers","ReactorReducer","store","reducer","mergePersistedState","storage","adapter","localStorage","enhancer","persistState","createStore","configureStore","ReactDOM","render","anchorOrigin","vertical","horizontal","preventDuplicate","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.55e3c0e9.chunk.js","sourcesContent":["//import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '../store';\r\n\r\ninterface Localization {\r\n  [key: string]: string | null;\r\n}\r\n\r\ninterface LocalizationCollection {\r\n  [key: string]: Localization | null;\r\n}\r\n\r\nconst zh_Hans: Localization = {\r\n  Lang: '简体中文',\r\n  Title: '格雷科技6核电模拟器',\r\n  ChangeLanguage: '更改语言',\r\n  CreateReactor: '创建反应堆',\r\n  InputSize: '输入尺寸',\r\n  ReactorSize: '反应堆的大小：',\r\n  Length: '长',\r\n  Width: '宽',\r\n  Rods: '燃料棒',\r\n  AddRods: '添加燃料棒',\r\n  ReactorPreview: '反应堆预览',\r\n  ReactorSimulation: '反应堆模拟结果',\r\n  ReactorRodList: '燃料棒列表',\r\n  RodType: '类型',\r\n  X: 'X',\r\n  Y: 'Y',\r\n  Size: '尺寸',\r\n  Size1By1: '1×1',\r\n  Size2By2: '2×2',\r\n  NoRecords: '没有燃料棒',\r\n  RodPositionCollided: '燃料棒位置冲突',\r\n  RodPositionIllegal: '燃料棒位置无效',\r\n  RodAdded: '已添加燃料棒',\r\n  RodUpdated: '已更新燃料棒',\r\n  RodDeleted: '已删除燃料棒',\r\n  RodNotFound: '找不到燃料棒',\r\n  AddRow: '添加',\r\n  EditRow: '编辑',\r\n  DeleteRow: '删除',\r\n  DeleteRowConfirm: '确认删除？',\r\n  CancelEdit: '取消',\r\n  SaveEdit: '确定',\r\n  SimulationBegin: '开始模拟',\r\n  Next: '下一步',\r\n  Prev: '上一步',\r\n  Empty: '空',\r\n  Time: '时间(s)',\r\n  Sec: '秒',\r\n  ControlPanel: '控制面板',\r\n  ShowContent: '展示内容',\r\n  HU: 'HU',\r\n  TotalHeat: '总产热：',\r\n  Neutrons: '中子',\r\n  NeutronsCount: '中子数',\r\n  Statistics: '统计',\r\n  HeatChart: '反应堆热量统计图',\r\n  Maxinum: '最大值',\r\n  CopyToClipboard: '复制方案到剪贴板',\r\n  SolutionCopied: '已复制到剪贴板',\r\n  PasteSolutionHere: '请输入方案代码',\r\n  SolutionCode: '方案代码',\r\n  SolutionLoaded: '已加载解决方案',\r\n  SolutionCodeError: '解决方案代码有误',\r\n  Cancel: '取消',\r\n  Ok: '确定',\r\n  LoadSolution: '加载方案',\r\n  About: '关于',\r\n  AboutAuthor: '作者：',\r\n  AboutVersion: '版本',\r\n  AboutGregVersion: '适用于格雷版本：',\r\n  AboutLicense: '版权所有 © 2020',\r\n  NeutronAbsorber: '中子吸收棒',\r\n  NeutronReflector: '中子反射棒',\r\n  Thorium230: '钍-230',\r\n  Cyanite: '蓝晶石',\r\n  Uranium238: '铀-238',\r\n  Uranium235: '铀-235',\r\n  Yellorium: '黄铀',\r\n  Plutonium244: '钚-244',\r\n  Plutonium241: '钚-241',\r\n  Plutonium243: '钚-243',\r\n  Blutonium: '蓝钚',\r\n  Americium245: '镅-245',\r\n  Americium241: '镅-241',\r\n  Ludicrite: '滑稽',\r\n  Cobalt60: '钴-60',\r\n  EnrichedNaquadah: '浓缩硅岩金属',\r\n  Naquadria: '硅岩金属化合物'\r\n};\r\n\r\nconst en: Localization = {\r\n  Lang: 'English',\r\n  Title: 'GregTech6 Nuclear Simulator',\r\n  ChangeLanguage: 'Change Language',\r\n  CreateReactor: 'Create the reactor',\r\n  InputSize: 'Input the size',\r\n  ReactorSize: 'Size of the reactor：',\r\n  Length: 'Length',\r\n  Width: 'Width',\r\n  Rods: 'Rods',\r\n  AddRods: 'Add rods',\r\n  ReactorPreview: 'Reactor Preview',\r\n  ReactorSimulation: 'Reactor Simulation',\r\n  ReactorRodList: 'Rods list',\r\n  RodType: 'Type',\r\n  X: 'X',\r\n  Y: 'Y',\r\n  Size: 'Size',\r\n  Size1By1: '1×1',\r\n  Size2By2: '2×2',\r\n  NoRecords: 'No rods',\r\n  RodPositionCollided: 'Rods Collided',\r\n  RodPositionIllegal: 'The position of your rod is invalid',\r\n  RodAdded: 'Rod added',\r\n  RodUpdated: 'Rod updated',\r\n  RodDeleted: 'Rod deleted',\r\n  RodNotFound: 'Rod not found',\r\n  AddRow: 'Add',\r\n  EditRow: 'Edit',\r\n  DeleteRow: 'Delete',\r\n  DeleteRowConfirm: 'Confirm deletion?',\r\n  CancelEdit: 'Cancel',\r\n  SaveEdit: 'OK',\r\n  SimulationBegin: 'Start the simulation',\r\n  Next: 'Next',\r\n  Prev: 'Prev',\r\n  Empty: 'Empty',\r\n  Time: 'Time(s)',\r\n  Sec: 's',\r\n  ControlPanel: 'Control Panel',\r\n  ShowContent: 'Displaying',\r\n  HU: 'HU',\r\n  TotalHeat: 'Total heat generated: ',\r\n  Neutrons: 'Neutrons',\r\n  NeutronsCount: 'Number of Neutrons',\r\n  Statistics: 'Statistics',\r\n  HeatChart: 'Chart of Heat Generation',\r\n  Maxinum: 'Maxinum',\r\n  CopyToClipboard: 'Copy the solution to clipboard',\r\n  SolutionCopied: 'Solution copied',\r\n  PasteSolutionHere: 'Please input the code of your solution: ',\r\n  SolutionCode: 'Code of your solution',\r\n  SolutionLoaded: 'Solution loaded',\r\n  SolutionCodeError: 'Wrong code',\r\n  Cancel: 'Cancel',\r\n  Ok: 'OK',\r\n  LoadSolution: 'Load your solution',\r\n  About: 'About',\r\n  AboutAuthor: 'Author: ',\r\n  AboutVersion: 'Version',\r\n  AboutGregVersion: 'Based on GregTech6 version: ',\r\n  AboutLicense: 'Copyright © 2020',\r\n  NeutronAbsorber: 'Neutron Absorber',\r\n  NeutronReflector: 'Neutron Reflector',\r\n  Thorium230: 'Thorium-230',\r\n  Cyanite: 'Cyanite',\r\n  Uranium238: 'Uranium-238',\r\n  Uranium235: 'Uranium-235',\r\n  Yellorium: 'Yellorium',\r\n  Plutonium244: 'Plutonium-244',\r\n  Plutonium241: 'Plutonium-241',\r\n  Plutonium243: 'Plutonium-243',\r\n  Blutonium: 'Blutonium',\r\n  Americium245: 'Americium-245',\r\n  Americium241: 'Americium-241',\r\n  Ludicrite: 'Ludicrite',\r\n  Cobalt60: 'Cobalt-60',\r\n  EnrichedNaquadah: 'Enriched Naquadah',\r\n  Naquadria: 'Naquadria'\r\n};\r\n\r\nconst collections: LocalizationCollection = {\r\n  'zh-Hans': zh_Hans,\r\n  en: en\r\n};\r\n\r\nconst defaultLocalization = zh_Hans;\r\n\r\nconst i18n = (\r\n  code: string,\r\n  languageCode: keyof LocalizationCollection = 'zh-Hans'\r\n) => {\r\n  let currentLocalization = collections[languageCode];\r\n  if (!currentLocalization) currentLocalization = defaultLocalization;\r\n  let result = currentLocalization[code];\r\n  if (!result) result = defaultLocalization[code];\r\n  return result || code;\r\n};\r\n\r\nfunction useI18n() {\r\n  const languageState = useSelector((state: RootState) => state.language);\r\n  return (code: string) => i18n(code, languageState.language);\r\n}\r\n\r\nexport { i18n, useI18n, collections };\r\n","export enum ReactorRodTypes {\r\n  Empty = 9201,\r\n  NeutronAbsorber = 9202,\r\n  NeutronReflector = 9203,\r\n  Thorium230 = 9210,\r\n  //Cyanite = 9219,\r\n  Uranium238 = 9220,\r\n  Uranium235 = 9221,\r\n  //Yellorium = 9229,\r\n  Plutonium244 = 9230,\r\n  Plutonium241 = 9231,\r\n  Plutonium243 = 9232,\r\n  //Blutonium = 9239,\r\n  Americium245 = 9240,\r\n  Americium241 = 9241,\r\n  //Ludicrite = 9249,\r\n  Cobalt60 = 9250,\r\n  EnrichedNaquadah = 9260,\r\n  Naquadria = 9261\r\n}\r\n\r\nexport const ReactorRodTypeIndecies: number[] = Object.keys(ReactorRodTypes)\r\n  .filter((key: any) => !isNaN(Number(key)))\r\n  .map((key: any) => Number(key));\r\n\r\nexport const ReactorRodColor = new Map([\r\n  [ReactorRodTypes.Empty, '#999999'],\r\n  [ReactorRodTypes.NeutronAbsorber, '#646480'],\r\n  [ReactorRodTypes.NeutronReflector, '#192D19'],\r\n  [ReactorRodTypes.Thorium230, '#001E00'],\r\n  //[ReactorRodTypes.Cyanite , '#??????'],\r\n  [ReactorRodTypes.Uranium238, '#24AB24'],\r\n  [ReactorRodTypes.Uranium235, '#58DF58'],\r\n  //[ReactorRodTypes.Yellorium , '#??????'],\r\n  [ReactorRodTypes.Plutonium244, '#F03232'],\r\n  [ReactorRodTypes.Plutonium241, '#F26B6B'],\r\n  [ReactorRodTypes.Plutonium243, '#F0C3C3'],\r\n  //[ReactorRodTypes.Blutonium , '#??????'],\r\n  [ReactorRodTypes.Americium245, '#8F8F8F'],\r\n  [ReactorRodTypes.Americium241, '#3D4D4D'],\r\n  //[ReactorRodTypes.Ludicrite , '#??????'],\r\n  [ReactorRodTypes.Cobalt60, '#5A5AFE'],\r\n  [ReactorRodTypes.EnrichedNaquadah, '#5F5F5F'],\r\n  [ReactorRodTypes.Naquadria, '#3B3B3B']\r\n]);\r\n\r\nexport const ReactorRodDuablility = new Map([\r\n  [ReactorRodTypes.Empty, Infinity],\r\n  [ReactorRodTypes.NeutronAbsorber, Infinity],\r\n  [ReactorRodTypes.NeutronReflector, Infinity],\r\n  [ReactorRodTypes.Thorium230, 100000 * 60],\r\n  //[ReactorRodTypes.Cyanite , ?],\r\n  [ReactorRodTypes.Uranium238, 50000 * 60],\r\n  [ReactorRodTypes.Uranium235, 10000 * 60],\r\n  //[ReactorRodTypes.Yellorium , ?],\r\n  [ReactorRodTypes.Plutonium244, 10000 * 60],\r\n  [ReactorRodTypes.Plutonium241, 10000 * 60],\r\n  [ReactorRodTypes.Plutonium243, 10000 * 60],\r\n  //[ReactorRodTypes.Blutonium , ?],\r\n  [ReactorRodTypes.Americium245, 10000 * 60],\r\n  [ReactorRodTypes.Americium241, 10000 * 60],\r\n  //[ReactorRodTypes.Ludicrite , ?],\r\n  [ReactorRodTypes.Cobalt60, 50000 * 60],\r\n  [ReactorRodTypes.EnrichedNaquadah, 100000 * 60],\r\n  [ReactorRodTypes.Naquadria, 100000 * 60]\r\n]);\r\n\r\nexport const ReactorRodEmissionSelf = new Map([\r\n  [ReactorRodTypes.Empty, 0],\r\n  [ReactorRodTypes.NeutronAbsorber, 0],\r\n  [ReactorRodTypes.NeutronReflector, 0],\r\n  [ReactorRodTypes.Thorium230, 8],\r\n  //[ReactorRodTypes.Cyanite , ?],\r\n  [ReactorRodTypes.Uranium238, 16],\r\n  [ReactorRodTypes.Uranium235, 128],\r\n  //[ReactorRodTypes.Yellorium , ?],\r\n  [ReactorRodTypes.Plutonium244, 256],\r\n  [ReactorRodTypes.Plutonium241, 512],\r\n  [ReactorRodTypes.Plutonium243, 512],\r\n  //[ReactorRodTypes.Blutonium , ?],\r\n  [ReactorRodTypes.Americium245, 256],\r\n  [ReactorRodTypes.Americium241, 512],\r\n  //[ReactorRodTypes.Ludicrite , ?],\r\n  [ReactorRodTypes.Cobalt60, 8],\r\n  [ReactorRodTypes.EnrichedNaquadah, 512],\r\n  [ReactorRodTypes.Naquadria, 2048]\r\n]);\r\n\r\nexport const ReactorRodEmissionOthers = ReactorRodEmissionSelf;\r\n\r\nexport const ReactorRodFactor = new Map([\r\n  [ReactorRodTypes.Empty, NaN],\r\n  [ReactorRodTypes.NeutronAbsorber, NaN],\r\n  [ReactorRodTypes.NeutronReflector, NaN],\r\n  [ReactorRodTypes.Thorium230, 64],\r\n  //[ReactorRodTypes.Cyanite , ?],\r\n  [ReactorRodTypes.Uranium238, 32],\r\n  [ReactorRodTypes.Uranium235, 8],\r\n  //[ReactorRodTypes.Yellorium , ?],\r\n  [ReactorRodTypes.Plutonium244, 8],\r\n  [ReactorRodTypes.Plutonium241, 6],\r\n  [ReactorRodTypes.Plutonium243, 6],\r\n  //[ReactorRodTypes.Blutonium , ?],\r\n  [ReactorRodTypes.Americium245, 8],\r\n  [ReactorRodTypes.Americium241, 6],\r\n  //[ReactorRodTypes.Ludicrite , ?],\r\n  [ReactorRodTypes.Cobalt60, 32],\r\n  [ReactorRodTypes.EnrichedNaquadah, 8],\r\n  [ReactorRodTypes.Naquadria, 6]\r\n]);\r\n\r\nexport interface ReactorRodInterface {\r\n  type: ReactorRodTypes;\r\n  x: number;\r\n  y: number;\r\n  size: number;\r\n}\r\n\r\nexport interface ReactorInterface {\r\n  length: number;\r\n  width: number;\r\n  rods: ReactorRodInterface[];\r\n}\r\n\r\nexport interface ReactorGridStatus {\r\n  x: number;\r\n  y: number;\r\n  type: ReactorRodTypes;\r\n  heat: number;\r\n  rodSize: number;\r\n  isFirst: Boolean;\r\n}\r\n\r\nexport enum ReactorCoolantType {\r\n  IC2Coolant = 'IC2Coolant',\r\n  DistilledWater = 'DistilledWater'\r\n}\r\n\r\nconst divup = (a: number, b: number) => Math.floor(a / b) + (a % b ? 1 : 0);\r\n\r\nconst Array2D = (rows: number, columns: number, defaultValue: any) => {\r\n  return Array.from({ length: rows }, () =>\r\n    Array.from({ length: columns }, () => defaultValue)\r\n  );\r\n};\r\n\r\nconst ArrayEqual = (a: Array<any>, b: Array<any>) => {\r\n  return a.every((value, index) => value === b[index]);\r\n};\r\n\r\nexport class Reactor implements ReactorInterface {\r\n  constructor(\r\n    public length: number = 1,\r\n    public width: number = 1,\r\n    public rods: ReactorRodInterface[] = []\r\n  ) {}\r\n\r\n  getHeatMap(timeLimit: number = Infinity) {\r\n    // init\r\n    // totalNeutrons[time][r] represents the numbers of neutrons\r\n    // the rod #r had at that time\r\n    let totalNeutrons = new Map<number, number[]>();\r\n    // receivedNeutrons[time][r] represents the numbers of neutrons\r\n    // the rod #r received from other rods at that time\r\n    let receivedNeutrons = new Map<number, number[]>();\r\n    // energyGenerated[time][r] represents the amount of energy\r\n    // the rod #r generated at that time\r\n    let energyGenerated = new Map<number, number[]>();\r\n\r\n    // durabilities of rods\r\n    let durability = this.rods.map(\r\n      rod => ReactorRodDuablility.get(Number(rod.type)) || -1\r\n    );\r\n\r\n    // map location to rod ids\r\n    let reactorMap = Array2D(this.length, this.width, -1);\r\n\r\n    // alloc\r\n    for (let r = 0; r < this.rods.length; r++) {\r\n      let currentRod = this.rods[r];\r\n      // 1x1\r\n      reactorMap[currentRod.x][currentRod.y] = r;\r\n      if (Number(currentRod.size) !== 1) {\r\n        // 2x2\r\n        reactorMap[currentRod.x + 1][currentRod.y] = r;\r\n        reactorMap[currentRod.x][currentRod.y + 1] = r;\r\n        reactorMap[currentRod.x + 1][currentRod.y + 1] = r;\r\n      }\r\n    }\r\n\r\n    // simulate\r\n    const nextState = (prevReceivedNeutrons: Array<number>) => {\r\n      let result = {\r\n        totalNeutrons: Array(this.rods.length).fill(0),\r\n        receivedNeutrons: Array(this.rods.length).fill(0),\r\n        energyGenerated: Array(this.rods.length).fill(0),\r\n        durabilityCost: Array(this.rods.length).fill(0)\r\n      };\r\n      for (let r = 0; r < this.rods.length; r++) {\r\n        if (durability[r] <= 0) continue; // depleted\r\n        let currentRod = this.rods[r];\r\n\r\n        // emissionSelf\r\n        let emissionSelf = ReactorRodEmissionSelf.get(Number(currentRod.type));\r\n        if (emissionSelf && emissionSelf > 0) {\r\n          // normal rod\r\n          result.totalNeutrons[r] += emissionSelf;\r\n          result.energyGenerated[r] += emissionSelf;\r\n        }\r\n\r\n        // emissionOthers\r\n        let emissionOthers = ReactorRodEmissionOthers.get(\r\n          Number(currentRod.type)\r\n        );\r\n        if (emissionOthers && emissionOthers > 0) {\r\n          // normal rod\r\n          // accumulated neutrons\r\n          let factor = ReactorRodFactor.get(Number(currentRod.type));\r\n          if (factor && factor > 0) {\r\n            emissionOthers += divup(prevReceivedNeutrons[r], factor);\r\n          }\r\n          if (currentRod.size === 2) {\r\n            // small reactor penalty\r\n            emissionOthers = divup(emissionOthers, 2);\r\n          }\r\n\r\n          // TODO: durability calculation\r\n          result.durabilityCost[r] = 1;\r\n\r\n          let dx =\r\n            currentRod.size === 1 ? [0, 0, -1, 1] : [0, 0, 1, 1, -1, 2, -1, 2];\r\n          let dy =\r\n            currentRod.size === 1 ? [-1, 1, 0, 0] : [-1, 2, -1, 2, 0, 0, 1, 1];\r\n          for (let k = 0; k < dx.length; k++) {\r\n            let ax = currentRod.x + dx[k];\r\n            let ay = currentRod.y + dy[k];\r\n            // illegal position\r\n            if (ax < 0 || ax >= this.length || ay < 0 || ay >= this.width)\r\n              continue;\r\n            let ar = reactorMap[ax][ay];\r\n            if (ar === -1) continue;\r\n\r\n            let adjentRod = this.rods[ar];\r\n            switch (Number(adjentRod.type)) {\r\n              case ReactorRodTypes.Empty:\r\n                break;\r\n              case ReactorRodTypes.NeutronAbsorber:\r\n                result.totalNeutrons[ar] += emissionOthers;\r\n                result.receivedNeutrons[ar] += emissionOthers;\r\n                result.energyGenerated[ar] += 2 * emissionOthers;\r\n                break;\r\n              case ReactorRodTypes.NeutronReflector:\r\n                result.totalNeutrons[r] += emissionOthers;\r\n                result.receivedNeutrons[r] += emissionOthers;\r\n                result.energyGenerated[r] += emissionOthers;\r\n                break;\r\n              default:\r\n                // normal rod\r\n                result.totalNeutrons[ar] += emissionOthers;\r\n                result.receivedNeutrons[ar] += emissionOthers;\r\n                result.energyGenerated[ar] += emissionOthers;\r\n            }\r\n          }\r\n        }\r\n      }\r\n      return result;\r\n    };\r\n\r\n    const minStep = (durabilityCost: Array<number>, limit?: number) => {\r\n      if (limit && limit <= 0) return 0;\r\n      let result = Math.min(\r\n        ...durability.map((value, index) =>\r\n          durabilityCost[index] !== 0\r\n            ? Math.floor(value / durabilityCost[index])\r\n            : Infinity\r\n        )\r\n      );\r\n      if (limit) {\r\n        result = Math.min(result, limit);\r\n      }\r\n      if (result > 0) {\r\n        durability.forEach((value, index) => {\r\n          durability[index] -= result * durabilityCost[index];\r\n        });\r\n      }\r\n      return result;\r\n    };\r\n\r\n    for (let time = 0, prevTime = 0; time <= timeLimit; time++) {\r\n      if (time === 0) {\r\n        totalNeutrons.set(time, Array(this.rods.length).fill(0));\r\n        receivedNeutrons.set(time, Array(this.rods.length).fill(0));\r\n        energyGenerated.set(time, Array(this.rods.length).fill(0));\r\n      } else {\r\n        // durability\r\n        for (let r = 0; r < this.rods.length; r++) {\r\n          if (durability[r] > 0) durability[r]--;\r\n        }\r\n\r\n        // simulate\r\n        let prevTotalNeutrons = totalNeutrons.get(prevTime);\r\n        let prevReceivedNeutrons = receivedNeutrons.get(prevTime);\r\n        let prevEnergyGenerated = energyGenerated.get(prevTime);\r\n        if (!prevTotalNeutrons || !prevReceivedNeutrons || !prevEnergyGenerated)\r\n          throw new Error('Previous time not exist!');\r\n        let nextResult = nextState(prevReceivedNeutrons);\r\n\r\n        // check if stable or finish state\r\n        if (\r\n          time !== timeLimit &&\r\n          ArrayEqual(prevTotalNeutrons, nextResult.totalNeutrons) &&\r\n          ArrayEqual(prevReceivedNeutrons, nextResult.receivedNeutrons) &&\r\n          ArrayEqual(prevEnergyGenerated, nextResult.energyGenerated)\r\n        ) {\r\n          // stable\r\n          let minStepResult = minStep(\r\n            nextResult.durabilityCost,\r\n            timeLimit - time - 1\r\n          );\r\n          if (minStepResult === Infinity) {\r\n            break;\r\n          }\r\n          time += minStepResult;\r\n        } else {\r\n          prevTime = time;\r\n          totalNeutrons.set(time, nextResult.totalNeutrons);\r\n          receivedNeutrons.set(time, nextResult.receivedNeutrons);\r\n          energyGenerated.set(time, nextResult.energyGenerated);\r\n        }\r\n      }\r\n    }\r\n    return {\r\n      current: totalNeutrons,\r\n      recieved: receivedNeutrons,\r\n      energy: energyGenerated\r\n    };\r\n  }\r\n\r\n  getVisualMap() {\r\n    let result = new Array<ReactorGridStatus>();\r\n\r\n    // alloc\r\n    for (let i = 0; i < this.rods.length; i++) {\r\n      let currentRod = this.rods[i];\r\n      if (Number(currentRod.size) === 1) {\r\n        // 1x1\r\n        result.push({\r\n          x: Number(currentRod.x),\r\n          y: Number(currentRod.y),\r\n          type: currentRod.type,\r\n          heat: 0,\r\n          rodSize: 1,\r\n          isFirst: true\r\n        });\r\n      } else {\r\n        // 2x2\r\n        for (let i = 0; i < 4; i++) {\r\n          result.push({\r\n            x: Number(currentRod.x + (i % 2)),\r\n            y: Number(currentRod.y + (i >> 1)),\r\n            type: currentRod.type,\r\n            heat: 0,\r\n            rodSize: 2,\r\n            isFirst: i === 0\r\n          });\r\n        }\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n}\r\n","import { ReactorRodInterface } from '../store';\r\n\r\nexport enum ReactorActionTypes {\r\n  SetLength = 'SetLength',\r\n  SetWidth = 'SetWidth',\r\n  SetRods = 'SetRods'\r\n}\r\n\r\nexport interface ReactorActionInterface {\r\n  type: ReactorActionTypes;\r\n  length?: number;\r\n  width?: number;\r\n  rods?: ReactorRodInterface[];\r\n}\r\n","export enum LanguageActionTypes {\r\n  SetLanguage = 'SetLanguage'\r\n}\r\n\r\nexport interface LanguageActionInterface {\r\n  type: LanguageActionTypes;\r\n  language: string;\r\n}\r\n","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport Clipboard from 'react-clipboard.js';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport SaveAltIcon from '@material-ui/icons/SaveAlt';\r\nimport PublishIcon from '@material-ui/icons/Publish';\r\nimport TranslateIcon from '@material-ui/icons/Translate';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Link from '@material-ui/core/Link';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nimport { useSnackbar } from 'notistack';\r\nimport { useI18n } from '../i18n';\r\nimport { RootState, ReactorRodTypes } from '../store';\r\nimport { ReactorActionTypes, LanguageActionTypes } from '../actions';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  title: {\r\n    flexGrow: 1\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  select: {\r\n    alignItems: 'center',\r\n    marginRight: theme.spacing(2),\r\n    color: 'white'\r\n  },\r\n  selectIcon: {\r\n    color: 'white'\r\n  },\r\n  selectInputRoot: {\r\n    alignItems: 'center'\r\n  },\r\n  translateIcon: {\r\n    marginRight: theme.spacing(2),\r\n    color: 'white'\r\n  },\r\n  toolbar: {\r\n    alignItems: 'center'\r\n  }\r\n}));\r\n\r\nconst Navigation = () => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const i18n = useI18n();\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const reactorState = useSelector((state: RootState) => state.reactor);\r\n  const languageState = useSelector((state: RootState) => state.language);\r\n  const [solutionText, setSolutionText] = React.useState('');\r\n  const [solutionDialogOpen, setSolutionDialogOpen] = React.useState(false);\r\n  const [aboutDialogOpen, setAboutDialogOpen] = React.useState(false);\r\n\r\n  const handleAboutDialogClose = () => {\r\n    setAboutDialogOpen(false);\r\n  };\r\n\r\n  const handleSolutionDialogCancel = () => {\r\n    setSolutionDialogOpen(false);\r\n  };\r\n\r\n  const handleSolutionDialogOk = () => {\r\n    try {\r\n      const solution = JSON.parse(solutionText);\r\n      if (!Array.isArray(solution)) throw Error('Not valid solution');\r\n      if (solution.length < 3) throw Error('Not valid solution');\r\n      const length = solution[0];\r\n      const width = solution[1];\r\n      const rods = solution[2];\r\n      if (!Number.isInteger(length) || length < 0)\r\n        throw Error('Not valid solution');\r\n      if (!Number.isInteger(width) || width < 0)\r\n        throw Error('Not valid solution');\r\n      if (!Array.isArray(rods)) throw Error('Not valid solution');\r\n      rods.forEach(rod => {\r\n        if (!Array.isArray(rod)) throw Error('Not valid solution');\r\n        if (!Number.isInteger(rod[0]) || rod[0] < 0)\r\n          throw Error('Not valid solution');\r\n        if (!Number.isInteger(rod[1]) || rod[1] < 0)\r\n          throw Error('Not valid solution');\r\n        if (!Number.isInteger(rod[2]) || !(rod[2] in ReactorRodTypes))\r\n          throw Error('Not valid solution');\r\n        if (rod[3] !== 1 && rod[3] !== 2) throw Error('Not valid solution');\r\n      });\r\n\r\n      // valid solution\r\n      dispatch({\r\n        type: ReactorActionTypes.SetLength,\r\n        length: Number(length)\r\n      });\r\n      dispatch({\r\n        type: ReactorActionTypes.SetWidth,\r\n        width: Number(width)\r\n      });\r\n      dispatch({\r\n        type: ReactorActionTypes.SetRods,\r\n        rods: rods.map(rod => {\r\n          return {\r\n            x: rod[0],\r\n            y: rod[1],\r\n            type: rod[2],\r\n            size: rod[3]\r\n          };\r\n        })\r\n      });\r\n    } catch (e) {\r\n      enqueueSnackbar(i18n('SolutionCodeError'), { variant: 'warning' });\r\n      return;\r\n    }\r\n    enqueueSnackbar(i18n('SolutionLoaded'), { variant: 'success' });\r\n    setSolutionDialogOpen(false);\r\n  };\r\n\r\n  // RFC 4646\r\n  // const [lang, setLang] = React.useState('zh-Hans');\r\n\r\n  const onSuccess = () => {\r\n    enqueueSnackbar(i18n('SolutionCopied'), { variant: 'success' });\r\n  };\r\n\r\n  const getText = () => {\r\n    return JSON.stringify([\r\n      reactorState.length,\r\n      reactorState.width,\r\n      reactorState.rods.map(item => [\r\n        item.x,\r\n        item.y,\r\n        Number(item.type),\r\n        item.size\r\n      ])\r\n    ]);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar className={classes.toolbar}>\r\n          <Typography className={classes.title} variant=\"h6\">\r\n            {i18n('Title')}\r\n          </Typography>\r\n\r\n          <Select\r\n            autoWidth\r\n            className={classes.select}\r\n            defaultValue=\"zh-Hans\"\r\n            disableUnderline\r\n            inputProps={{\r\n              classes: {\r\n                root: classes.selectInputRoot,\r\n                icon: classes.selectIcon\r\n              }\r\n            }}\r\n            onChange={event => {\r\n              dispatch({\r\n                type: LanguageActionTypes.SetLanguage,\r\n                language: event.target.value\r\n              });\r\n            }}\r\n            startAdornment={<TranslateIcon className={classes.translateIcon} />}\r\n            value={languageState.language}>\r\n            <MenuItem value=\"zh-Hans\">简体中文</MenuItem>\r\n            <MenuItem value=\"en\">English</MenuItem>\r\n          </Select>\r\n\r\n          <Clipboard\r\n            component=\"div\"\r\n            onSuccess={onSuccess}\r\n            option-text={getText}>\r\n            <Tooltip title={i18n('CopyToClipboard')}>\r\n              <IconButton\r\n                className={classes.menuButton}\r\n                color=\"inherit\"\r\n                edge=\"start\">\r\n                <SaveAltIcon />\r\n              </IconButton>\r\n            </Tooltip>\r\n          </Clipboard>\r\n          <Tooltip title={i18n('LoadSolution')}>\r\n            <IconButton\r\n              className={classes.menuButton}\r\n              color=\"inherit\"\r\n              edge=\"start\"\r\n              onClick={() => {\r\n                setSolutionDialogOpen(true);\r\n              }}>\r\n              <PublishIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n          <Tooltip title={i18n('About')}>\r\n            <IconButton\r\n              className={classes.menuButton}\r\n              color=\"inherit\"\r\n              edge=\"start\"\r\n              onClick={() => {\r\n                setAboutDialogOpen(true);\r\n              }}>\r\n              <InfoIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n        </Toolbar>\r\n\r\n        <Dialog\r\n          fullWidth\r\n          maxWidth=\"sm\"\r\n          onClose={handleSolutionDialogCancel}\r\n          open={solutionDialogOpen}>\r\n          <DialogTitle>{i18n('LoadSolution')}</DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText>{i18n('PasteSolutionHere')}</DialogContentText>\r\n            <TextField\r\n              autoFocus\r\n              fullWidth\r\n              label={i18n('SolutionCode')}\r\n              margin=\"dense\"\r\n              multiline\r\n              onChange={(event: any) => {\r\n                setSolutionText(event.target.value);\r\n              }}\r\n              rows=\"6\"\r\n              value={solutionText}\r\n              variant=\"outlined\"\r\n            />\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button color=\"primary\" onClick={handleSolutionDialogCancel}>\r\n              {i18n('Cancel')}\r\n            </Button>\r\n            <Button color=\"primary\" onClick={handleSolutionDialogOk}>\r\n              {i18n('Ok')}\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n\r\n        <Dialog\r\n          fullWidth\r\n          maxWidth=\"sm\"\r\n          onClose={handleAboutDialogClose}\r\n          open={aboutDialogOpen}>\r\n          <DialogTitle>{i18n('Title') + ' '}v1.0.0</DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText>\r\n              {i18n('AboutGregVersion')}\r\n              v6.12.02 <br />\r\n              {i18n('AboutLicense') + ' '}\r\n              <Link\r\n                href=\"https://github.com/Tanimodori\"\r\n                rel=\"noopener\"\r\n                target=\"_blank\">\r\n                Tanimodori\r\n              </Link>\r\n            </DialogContentText>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button autoFocus color=\"primary\" onClick={handleAboutDialogClose}>\r\n              {i18n('Ok')}\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nimport { ReactorView, ReactorTotalHeatChart } from './';\r\nimport { RootState, Reactor, ReactorGridStatus } from '../store';\r\nimport { useI18n } from '../i18n';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles({\r\n  card: {\r\n    flex: 1,\r\n    height: '100%',\r\n    marginBottom: 15\r\n  },\r\n  cardOthers: {\r\n    marginBottom: 15\r\n  },\r\n  cardContent: {\r\n    justifyContent: 'center'\r\n  },\r\n  slider: {\r\n    width: '98%'\r\n  },\r\n  select: {\r\n    width: '100%'\r\n  }\r\n});\r\n\r\nenum DisplayContentType {\r\n  HU = 'HU',\r\n  NeutronsCount = 'NeutronsCount'\r\n}\r\n\r\nconst ReactorSimulationPage = () => {\r\n  const classes = useStyles();\r\n  const i18n = useI18n();\r\n  const [time, setTime] = React.useState(0);\r\n  const [contentType, setContentType] = React.useState(DisplayContentType.HU);\r\n\r\n  const reactorState = useSelector((state: RootState) => state.reactor);\r\n\r\n  const dataHeat = React.useMemo(() => {\r\n    const reactorInstance = new Reactor(\r\n      reactorState.length,\r\n      reactorState.width,\r\n      reactorState.rods\r\n    );\r\n    return reactorInstance.getHeatMap();\r\n  }, [reactorState]);\r\n\r\n  const dataHeatIndecies = Array.from(dataHeat.current.keys());\r\n  let dataHeatIndexBound = dataHeatIndecies.findIndex(value => value >= time);\r\n  if (dataHeatIndexBound === undefined) {\r\n    dataHeatIndexBound = dataHeatIndecies.length - 1;\r\n  }\r\n  const dataHeatIndex =\r\n    dataHeatIndecies[dataHeatIndexBound] === time\r\n      ? time\r\n      : dataHeatIndecies[dataHeatIndexBound - 1];\r\n  let currentData: number[];\r\n  let currentDataHeat = dataHeat.energy.get(dataHeatIndex) || [];\r\n  let currentDataNeutrons = dataHeat.current.get(dataHeatIndex) || [];\r\n  if (contentType === DisplayContentType.HU) {\r\n    currentData = currentDataHeat;\r\n  } else if (contentType === DisplayContentType.NeutronsCount) {\r\n    currentData = currentDataNeutrons;\r\n  } else {\r\n    currentData = [];\r\n  }\r\n  let reactorData: ReactorGridStatus[] = reactorState.rods.reduce(\r\n    (acc, item, index, _) => {\r\n      if (item.size === 1) {\r\n        acc.push({\r\n          x: item.x,\r\n          y: item.y,\r\n          type: item.type,\r\n          heat: currentData[index] || 0,\r\n          rodSize: item.size,\r\n          isFirst: true\r\n        });\r\n        return acc;\r\n      } else {\r\n        for (let k = 0; k <= 3; k++) {\r\n          let isFirst = k % 2 === 0 && k >> 1 === 0;\r\n          acc.push({\r\n            x: item.x + (k % 2),\r\n            y: item.y + (k >> 1),\r\n            type: item.type,\r\n            heat: currentData[index] || 0,\r\n            rodSize: item.size,\r\n            isFirst: isFirst\r\n          });\r\n        }\r\n        return acc;\r\n      }\r\n    },\r\n    Array<ReactorGridStatus>()\r\n  );\r\n\r\n  let getSuffix = () => {\r\n    switch (contentType) {\r\n      case DisplayContentType.HU:\r\n        return i18n('HU');\r\n      case DisplayContentType.NeutronsCount:\r\n        return i18n('Neutrons');\r\n      default:\r\n        return '';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Card className={classes.card}>\r\n        <CardHeader title={i18n('ReactorSimulation')} />\r\n        <CardContent>\r\n          <ReactorView\r\n            suffix={getSuffix()}\r\n            data={reactorData}\r\n            isPreview={false}\r\n            length={reactorState.length}\r\n            width={reactorState.width}\r\n          />\r\n        </CardContent>\r\n      </Card>\r\n\r\n      <Card className={classes.cardOthers}>\r\n        <CardHeader title={i18n('ControlPanel')} />\r\n        <CardContent className={classes.cardContent}>\r\n          <Grid alignItems=\"baseline\" container spacing={3}>\r\n            <Grid container item md={1} xs={2}>\r\n              <Typography>{i18n('ShowContent')}</Typography>\r\n            </Grid>\r\n            <Grid container item md={11} xs={10}>\r\n              <Select\r\n                className={classes.select}\r\n                value={contentType}\r\n                onChange={(event: any) => {\r\n                  let value = event.target.value;\r\n                  if (Object.values(DisplayContentType).includes(value)) {\r\n                    setContentType(value as DisplayContentType);\r\n                  }\r\n                }}>\r\n                <MenuItem value={DisplayContentType.HU}>\r\n                  {i18n(DisplayContentType.HU)}\r\n                </MenuItem>\r\n                <MenuItem value={DisplayContentType.NeutronsCount}>\r\n                  {i18n(DisplayContentType.NeutronsCount)}\r\n                </MenuItem>\r\n              </Select>\r\n            </Grid>\r\n\r\n            <Grid container item md={1} xs={2}>\r\n              <Typography>{i18n('Time')}</Typography>\r\n            </Grid>\r\n            <Grid container item md={11} xs={10}>\r\n              <Slider\r\n                className={classes.slider}\r\n                marks={dataHeatIndecies.map((item, index) => {\r\n                  return { value: index, label: item.toLocaleString() };\r\n                })}\r\n                max={dataHeatIndecies.length - 1}\r\n                min={0}\r\n                onChange={(event, newValue) => {\r\n                  if (typeof newValue === 'number') {\r\n                    setTime(dataHeatIndecies[newValue]);\r\n                  }\r\n                }}\r\n                step={null}\r\n                value={time}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n      </Card>\r\n\r\n      <Card>\r\n        <CardHeader title={i18n('Statistics')} />\r\n        <CardContent>\r\n          <ReactorTotalHeatChart\r\n            keys={dataHeatIndecies}\r\n            values={dataHeatIndecies.map(index => {\r\n              let dataHeatSometime = dataHeat.energy.get(index);\r\n              return dataHeatSometime\r\n                ? dataHeatSometime.reduce((a, b) => a + b, 0)\r\n                : 0;\r\n            })}\r\n          />\r\n        </CardContent>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ReactorSimulationPage;\r\n","import React from 'react';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\n\r\nimport { useI18n } from '../i18n';\r\n\r\ninterface IProps {\r\n  step: number;\r\n}\r\n\r\nconst StepTracker = ({ step }: IProps) => {\r\n  const i18n = useI18n();\r\n  const labels = ['CreateReactor', 'AddRods', 'SimulationBegin'];\r\n\r\n  return (\r\n    <Stepper activeStep={step}>\r\n      {labels.map((label, index) => {\r\n        const stepProps = { completed: index < step };\r\n        return (\r\n          <Step key={label} {...stepProps}>\r\n            <StepLabel>{i18n(label)}</StepLabel>\r\n          </Step>\r\n        );\r\n      })}\r\n    </Stepper>\r\n  );\r\n};\r\n\r\nexport default StepTracker;\r\n","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\n\r\nimport { RootState } from '../store';\r\nimport { useI18n } from '../i18n';\r\nimport { ReactorActionTypes } from '../actions';\r\n\r\nconst useStyles = makeStyles({\r\n  title: {\r\n    fontSize: 14\r\n  },\r\n  control: {\r\n    flex: 1\r\n  }\r\n});\r\n\r\nconst SizeSelector = () => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const i18n = useI18n();\r\n  const reactor = useSelector((state: RootState) => state.reactor);\r\n\r\n  const inputProps = {\r\n    inputProps: { min: 2, step: 2 },\r\n    endAdornment: <InputAdornment position=\"end\">{i18n('Rods')}</InputAdornment>\r\n  };\r\n  return (\r\n    <Grid alignItems=\"baseline\" container spacing={3}>\r\n      <Grid container item lg={2} md={3} sm={4} xs={12}>\r\n        <Typography className={classes.title}>{i18n('ReactorSize')}</Typography>\r\n      </Grid>\r\n      <Grid container item xs>\r\n        <TextField\r\n          className={classes.control}\r\n          InputProps={inputProps}\r\n          label={i18n('Length')}\r\n          onChange={event => {\r\n            dispatch({\r\n              type: ReactorActionTypes.SetLength,\r\n              length: Number(event.target.value)\r\n            });\r\n          }}\r\n          type=\"number\"\r\n          value={reactor.length}\r\n        />\r\n      </Grid>\r\n      <Grid container item xs>\r\n        <TextField\r\n          className={classes.control}\r\n          InputProps={inputProps}\r\n          label={i18n('Width')}\r\n          onChange={event => {\r\n            dispatch({\r\n              type: ReactorActionTypes.SetWidth,\r\n              width: Number(event.target.value)\r\n            });\r\n          }}\r\n          type=\"number\"\r\n          value={reactor.width}\r\n        />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default SizeSelector;\r\n","import React from 'react';\r\n\r\nimport ReactEcharts from 'echarts-for-react';\r\n// @ts-ignore\r\nimport Ratio from 'react-ratio';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { ReactorRodColor, ReactorRodTypes, ReactorGridStatus } from '../store';\r\n\r\nimport { useI18n } from '../i18n';\r\n\r\ninterface IProps {\r\n  length: number;\r\n  width: number;\r\n  data: Array<ReactorGridStatus>;\r\n  isPreview?: Boolean;\r\n  suffix?: string;\r\n}\r\n\r\nconst visualColors = Object.values(ReactorRodColor);\r\nconst generateVisualMap = (isPreview: Boolean) => {\r\n  if (isPreview) {\r\n    const visualMapVisual = {\r\n      type: 'piecewise',\r\n      dimension: 2,\r\n      show: false,\r\n      pieces: Array.from(ReactorRodColor, ([key, value]) => {\r\n        return {\r\n          value: key,\r\n          //label: i18n(ReactorRodTypes[key]),\r\n          color: value\r\n        };\r\n      })\r\n    };\r\n    return visualMapVisual;\r\n  } else {\r\n    const visualMapHeat = {\r\n      type: 'continuous',\r\n      dimension: 2,\r\n      min: 0,\r\n      max: 1000,\r\n      show: true,\r\n      calculable: true,\r\n      orient: 'horizontal',\r\n      left: 'center',\r\n      bottom: 40\r\n    };\r\n    return visualMapHeat;\r\n  }\r\n};\r\n\r\nconst generateData = (\r\n  isPreview: Boolean,\r\n  data: Array<ReactorGridStatus>,\r\n  i18n: (code: string) => string\r\n) => {\r\n  if (isPreview) {\r\n    const dataVisual = data.map(item => [\r\n      item.x,\r\n      item.y,\r\n      item.type,\r\n      i18n(ReactorRodTypes[item.type]),\r\n      item.isFirst\r\n    ]);\r\n    return dataVisual;\r\n  } else {\r\n    const dataHeat = data.map(item => [\r\n      item.x,\r\n      item.y,\r\n      item.heat,\r\n      i18n(ReactorRodTypes[item.type]),\r\n      item.isFirst\r\n    ]);\r\n    return dataHeat;\r\n  }\r\n};\r\n\r\nconst generateLabel = (isPreview: Boolean, suffix = '') => {\r\n  if (isPreview) {\r\n    const labelVisual = {\r\n      normal: {\r\n        show: true,\r\n        formatter: (params: { data: any[] }) =>\r\n          params.data[4] ? params.data[3] : '(' + params.data[3] + ')',\r\n        textStyle: {\r\n          color: '#ffffff'\r\n        }\r\n      }\r\n    };\r\n    return labelVisual;\r\n  } else {\r\n    const labelHeat = {\r\n      normal: {\r\n        show: true,\r\n        formatter: (params: { data: any[] }) => {\r\n          let displayData = params.data[3] + '\\n' + params.data[2] + suffix;\r\n          return params.data[4] ? displayData : '(' + params.data[3] + ')';\r\n        },\r\n        textStyle: {\r\n          color: '#ffffff'\r\n        }\r\n      }\r\n    };\r\n    return labelHeat;\r\n  }\r\n};\r\n\r\nconst ReactorView = ({\r\n  length,\r\n  width,\r\n  data,\r\n  isPreview = true,\r\n  suffix = ''\r\n}: IProps) => {\r\n  const useStyles = makeStyles({\r\n    ratio: {\r\n      maxWidth: Math.max(400, length * 200),\r\n      marginTop: 0,\r\n      marginBottom: 0,\r\n      marginLeft: 'auto',\r\n      marginRight: 'auto'\r\n    }\r\n  });\r\n  const classes = useStyles();\r\n  const i18n = useI18n();\r\n\r\n  const option = {\r\n    // coord\r\n    grid: {\r\n      show: true,\r\n      top: 20,\r\n      bottom: 100\r\n    },\r\n    xAxis: {\r\n      type: 'category',\r\n      data: Array.from(Array(length).keys()),\r\n      position: 'top'\r\n    },\r\n    yAxis: {\r\n      type: 'category',\r\n      data: Array.from(Array(width).keys()),\r\n      inverse: true\r\n    },\r\n    // data\r\n    series: [\r\n      {\r\n        name: 'Reactor',\r\n        type: 'heatmap',\r\n        data: generateData(isPreview, data, i18n),\r\n        label: generateLabel(isPreview, suffix),\r\n        emphasis: {\r\n          itemStyle: {\r\n            shadowBlur: 10,\r\n            shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n          }\r\n        }\r\n      }\r\n    ],\r\n    // others\r\n    tooltip: {\r\n      position: 'top'\r\n    },\r\n    animation: false,\r\n    color: visualColors,\r\n    visualMap: generateVisualMap(isPreview)\r\n  };\r\n\r\n  return (\r\n    <Ratio className={classes.ratio} ratio={length / width}>\r\n      <ReactEcharts\r\n        option={option}\r\n        style={{\r\n          minHeight: '400px',\r\n          width: '100%',\r\n          height: '100%',\r\n          padding: 0\r\n        }}\r\n        theme=\"light\"\r\n      />\r\n    </Ratio>\r\n  );\r\n};\r\n\r\nexport default ReactorView;\r\n","import React, { forwardRef } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport MaterialTable, { Icons } from 'material-table';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\n\r\nimport { useSnackbar } from 'notistack';\r\n\r\nimport { useI18n } from '../i18n';\r\nimport { ReactorActionTypes } from '../actions';\r\nimport {\r\n  RootState,\r\n  ReactorRodTypes,\r\n  ReactorRodInterface,\r\n  ReactorRodTypeIndecies\r\n} from '../store';\r\n\r\nconst useStyles = makeStyles({\r\n  input: {\r\n    width: '100%'\r\n  }\r\n});\r\n\r\nconst tableIcons: Icons = {\r\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n  DetailPanel: forwardRef((props, ref) => (\r\n    <ChevronRight {...props} ref={ref} />\r\n  )),\r\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  PreviousPage: forwardRef((props, ref) => (\r\n    <ChevronLeft {...props} ref={ref} />\r\n  )),\r\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n  SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\ninterface ReactorRodRow {\r\n  x: number;\r\n  y: number;\r\n  size: number;\r\n}\r\n\r\nconst cleanData = (data: ReactorRodInterface) => {\r\n  data.x = Number(data.x);\r\n  data.y = Number(data.y);\r\n  data.size = Number(data.size);\r\n  data.type = Number(data.type);\r\n};\r\n\r\nconst ReactorRodsTable = () => {\r\n  // General\r\n  const classes = useStyles();\r\n  const i18n = useI18n();\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const dispatch = useDispatch();\r\n  const reactor = useSelector((state: RootState) => state.reactor);\r\n\r\n  // Rods\r\n  const rods = reactor.rods;\r\n  const rodTypeLookupTable = Object.fromEntries(\r\n    ReactorRodTypeIndecies.map((key: number) => [\r\n      key,\r\n      i18n(ReactorRodTypes[key])\r\n    ])\r\n  );\r\n\r\n  // Rod helpers\r\n  const isRodPositionSame = (a: ReactorRodRow, b: ReactorRodRow) => {\r\n    return Number(a.x) === Number(b.x) && Number(a.y) === Number(b.y);\r\n  };\r\n  const findRod = (item: ReactorRodRow) => {\r\n    return rods.findIndex((rod: ReactorRodInterface) =>\r\n      isRodPositionSame(item, rod)\r\n    );\r\n  };\r\n  const isRodConflict = (rod: ReactorRodRow, item: ReactorRodRow) => {\r\n    // rectangle collision check\r\n    // If one rectangle is on left side of other\r\n    if (rod.x >= item.x + item.size || item.x >= rod.x + rod.size) return false;\r\n\r\n    // If one rectangle is above other\r\n    if (rod.y >= item.y + item.size || item.y >= rod.y + rod.size) return false;\r\n\r\n    return true;\r\n  };\r\n  const isPositionPossible = (item: ReactorRodRow) => {\r\n    // 2x2 Check\r\n    if (Number(item.size) === 2 && (item.x % 2 || item.y % 2)) return false;\r\n    // Boundary Check\r\n    return (\r\n      item.x >= 0 &&\r\n      item.x < reactor.length &&\r\n      item.y >= 0 &&\r\n      item.y < reactor.width\r\n    );\r\n  };\r\n\r\n  // Rod Manipulations\r\n  const addRod = (newData: ReactorRodInterface) => {\r\n    cleanData(newData);\r\n    // Posision Check\r\n    if (!isPositionPossible(newData)) {\r\n      enqueueSnackbar(i18n('RodPositionIllegal'), {\r\n        variant: 'warning'\r\n      });\r\n      return Promise.reject();\r\n    }\r\n    // Collision Check\r\n    if (rods.some((rod: ReactorRodInterface) => isRodConflict(rod, newData))) {\r\n      enqueueSnackbar(i18n('RodPositionCollided'), {\r\n        variant: 'warning'\r\n      });\r\n      return Promise.reject();\r\n    }\r\n    // Validated\r\n    rods.push(newData);\r\n    dispatch({\r\n      type: ReactorActionTypes.SetRods,\r\n      rods: rods\r\n    });\r\n    enqueueSnackbar(i18n('RodAdded'), { variant: 'success' });\r\n    return Promise.resolve();\r\n  };\r\n  const updateRod = (\r\n    newData: ReactorRodInterface,\r\n    oldData?: ReactorRodInterface\r\n  ) => {\r\n    cleanData(newData);\r\n    if (oldData) cleanData(oldData);\r\n    // Not only type changed\r\n    if (\r\n      !(\r\n        oldData &&\r\n        isRodPositionSame(newData, oldData) &&\r\n        Number(newData.size) === Number(oldData.size)\r\n      )\r\n    ) {\r\n      // Posision Check\r\n      if (!isPositionPossible(newData)) {\r\n        enqueueSnackbar(i18n('RodPositionIllegal'), {\r\n          variant: 'warning'\r\n        });\r\n        return Promise.reject();\r\n      }\r\n      // Collision Check\r\n      if (\r\n        rods.some((rod: ReactorRodInterface) => {\r\n          // Identical as oldData\r\n          if (oldData && isRodPositionSame(oldData, rod)) {\r\n            return false;\r\n          }\r\n          return isRodConflict(rod, newData);\r\n        })\r\n      ) {\r\n        enqueueSnackbar(i18n('RodPositionCollided'), {\r\n          variant: 'warning'\r\n        });\r\n        return Promise.reject();\r\n      }\r\n    }\r\n    // Validated\r\n    const index = oldData ? findRod(oldData) : -1;\r\n    if (index < 0) {\r\n      // Add row\r\n      rods.push(newData);\r\n    } else {\r\n      // Change row\r\n      rods[index] = newData;\r\n    }\r\n    dispatch({\r\n      type: ReactorActionTypes.SetRods,\r\n      rods: rods\r\n    });\r\n    enqueueSnackbar(i18n('RodUpdated'), { variant: 'success' });\r\n    return Promise.resolve();\r\n  };\r\n  const deleteRod = (oldData: ReactorRodInterface) => {\r\n    cleanData(oldData);\r\n    const index = oldData ? findRod(oldData) : -1;\r\n    if (index < 0) {\r\n      // Error\r\n      enqueueSnackbar(i18n('SimulationBegin'), { variant: 'warning' });\r\n      return Promise.reject();\r\n    } else {\r\n      // Delete row\r\n      rods.splice(index, 1);\r\n      dispatch({\r\n        type: ReactorActionTypes.SetRods,\r\n        rods: rods\r\n      });\r\n      enqueueSnackbar(i18n('RodDeleted'), { variant: 'success' });\r\n      return Promise.resolve();\r\n    }\r\n  };\r\n\r\n  // Input helper\r\n  const getNumericInputBounded = (minValue: number, maxValue: number) => (\r\n    props: any\r\n  ) => (\r\n    <TextField\r\n      className={classes.input}\r\n      InputProps={{ inputProps: { min: minValue, max: maxValue } }}\r\n      onChange={e => props.onChange(Number(e.target.value))}\r\n      type=\"number\"\r\n      value={props.value}\r\n    />\r\n  );\r\n\r\n  return (\r\n    <MaterialTable\r\n      columns={[\r\n        {\r\n          title: i18n('RodType'),\r\n          field: 'type',\r\n          lookup: rodTypeLookupTable,\r\n          initialEditValue: ReactorRodTypes.Empty\r\n        },\r\n        {\r\n          title: i18n('Size'),\r\n          field: 'size',\r\n          lookup: { 1: i18n('Size1By1'), 2: i18n('Size2By2') },\r\n          initialEditValue: 1\r\n        },\r\n        {\r\n          title: i18n('X'),\r\n          field: 'x',\r\n          type: 'numeric',\r\n          initialEditValue: 0,\r\n          editComponent: getNumericInputBounded(0, reactor.length - 1)\r\n        },\r\n        {\r\n          title: i18n('Y'),\r\n          field: 'y',\r\n          type: 'numeric',\r\n          initialEditValue: 0,\r\n          editComponent: getNumericInputBounded(0, reactor.width - 1)\r\n        }\r\n      ]}\r\n      data={rods}\r\n      editable={{\r\n        onRowAdd: addRod,\r\n        onRowUpdate: updateRod,\r\n        onRowDelete: deleteRod\r\n      }}\r\n      icons={tableIcons}\r\n      localization={{\r\n        header: {\r\n          actions: ''\r\n        },\r\n        body: {\r\n          addTooltip: i18n('AddRow'),\r\n          deleteTooltip: i18n('DeleteRow'),\r\n          editTooltip: i18n('EditRow'),\r\n          editRow: {\r\n            cancelTooltip: i18n('CancelEdit'),\r\n            saveTooltip: i18n('SaveEdit'),\r\n            deleteText: i18n('DeleteRowConfirm')\r\n          },\r\n          emptyDataSourceMessage: i18n('NoRecords')\r\n        }\r\n      }}\r\n      options={{\r\n        search: false,\r\n        paging: false\r\n      }}\r\n      title={i18n('ReactorRodList')}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ReactorRodsTable;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\n\r\nimport { ReactorView, ReactorRodsTable } from '.';\r\nimport { RootState, Reactor } from '../store';\r\nimport { useI18n } from '../i18n';\r\n\r\nconst useStyles = makeStyles({\r\n  card: {\r\n    flex: 1,\r\n    height: '100%',\r\n    marginBottom: 15\r\n  }\r\n});\r\n\r\nconst ReactorCreationPage = () => {\r\n  const reactorState = useSelector((state: RootState) => state.reactor);\r\n  const reactorInstance = new Reactor(\r\n    reactorState.length,\r\n    reactorState.width,\r\n    reactorState.rods\r\n  );\r\n  const reactorData = reactorInstance.getVisualMap();\r\n\r\n  const classes = useStyles();\r\n  const i18n = useI18n();\r\n  return (\r\n    <>\r\n      <Card className={classes.card}>\r\n        <CardHeader title={i18n('ReactorPreview')} />\r\n        <CardContent>\r\n          <ReactorView\r\n            data={reactorData}\r\n            isPreview\r\n            length={reactorState.length}\r\n            width={reactorState.width}\r\n          />\r\n        </CardContent>\r\n      </Card>\r\n      <ReactorRodsTable />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ReactorCreationPage;\r\n","import React from 'react';\r\nimport ReactEcharts from 'echarts-for-react';\r\n\r\nimport { useI18n } from '../i18n';\r\n\r\ninterface IProps {\r\n  keys: number[];\r\n  values: number[];\r\n}\r\n\r\nconst ReactorTotalHeatChart = ({ keys, values }: IProps) => {\r\n  const i18n = useI18n();\r\n  const option = {\r\n    color: ['#C23531'],\r\n    title: {\r\n      left: 'center',\r\n      text: i18n('HeatChart')\r\n    },\r\n    xAxis: {\r\n      name: i18n('Time'),\r\n      nameTextStyle: { fontSize: 12 },\r\n      axisLabel: { fontSize: 12, margin: 15 },\r\n      type: 'category',\r\n      boundaryGap: false,\r\n      data: keys.map(item => item.toLocaleString())\r\n    },\r\n    yAxis: {\r\n      name: i18n('HU'),\r\n      nameTextStyle: { fontSize: 12 },\r\n      axisLabel: { fontSize: 12, margin: 15 },\r\n      type: 'value'\r\n    },\r\n    tooltip: {\r\n      show: true,\r\n      formatter: '{c}' + i18n('HU') + '@{b}' + i18n('Sec')\r\n    },\r\n    series: [\r\n      {\r\n        data: values,\r\n        type: 'line',\r\n        areaStyle: {},\r\n        symbolSize: 16,\r\n        markPoint: {\r\n          data: [{ type: 'max', name: i18n('Maxinum') }],\r\n          tooltip: {\r\n            formatter: '{b}: {c}' + i18n('HU')\r\n          }\r\n        }\r\n      }\r\n    ],\r\n    graphic: {\r\n      type: 'text',\r\n      z: 100,\r\n      left: 'center',\r\n      top: 'bottom',\r\n      style: {\r\n        fill: '#333',\r\n        text: [\r\n          i18n('TotalHeat') +\r\n            values\r\n              .reduce(\r\n                (a, b, index) =>\r\n                  a +\r\n                  (index === values.length - 1\r\n                    ? 0\r\n                    : b * (keys[index + 1] - keys[index])),\r\n                0\r\n              )\r\n              .toLocaleString() +\r\n            i18n('HU')\r\n        ],\r\n        font: '20px'\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ReactEcharts\r\n      option={option}\r\n      style={{\r\n        minHeight: '400px',\r\n        width: '100%',\r\n        height: '100%',\r\n        padding: 0\r\n      }}\r\n      theme=\"light\"\r\n    />\r\n  );\r\n};\r\n\r\nexport default ReactorTotalHeatChart;\r\n","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport Button from '@material-ui/core/Button';\n//import Typography from '@material-ui/core/Typography';\n\nimport {\n  Navigation,\n  StepTracker,\n  SizeSelector,\n  ReactorSimulationPage,\n  ReactorCreationPage\n} from './components';\nimport { useI18n } from './i18n';\n\nconst useStyles = makeStyles({\n  app: {\n    flex: 1\n  },\n  content: {\n    width: '80%'\n  },\n  button: {\n    width: '100%'\n  },\n  card: {\n    flex: 1,\n    height: '100%',\n    marginBottom: 15\n  },\n  cardSmall: {}\n});\n\nfunction App() {\n  const classes = useStyles();\n  const i18n = useI18n();\n\n  const [step, setStep] = React.useState(0);\n\n  const cardWrapper = (\n    children: any,\n    header?: any,\n    className = classes.card\n  ) => (\n    <Card className={className}>\n      {header && <CardHeader title={header} />}\n      <CardContent>{children}</CardContent>\n    </Card>\n  );\n\n  const stepContent = () => {\n    if (step === 0) {\n      return cardWrapper(<SizeSelector />, i18n('InputSize'));\n    } else if (step === 1) {\n      return <ReactorCreationPage />;\n    } else {\n      return <ReactorSimulationPage />;\n    }\n  };\n\n  const getButtons = () => {\n    const prevButton = (\n      <Button\n        className={classes.button}\n        onClick={() => {\n          setStep(step - 1);\n        }}\n        variant=\"contained\">\n        {i18n('Prev')}\n      </Button>\n    );\n    const nextButton = (\n      <Button\n        className={classes.button}\n        color=\"primary\"\n        onClick={() => {\n          setStep(step + 1);\n        }}\n        variant=\"contained\">\n        {i18n('Next')}\n      </Button>\n    );\n    return (\n      <Box display=\"flex\">\n        {step > 0 && (\n          <Box flexGrow={1} mb={3} ml={0} mr={step === 1 ? 2 : 0} mt={3}>\n            {prevButton}\n          </Box>\n        )}\n        {step < 2 && (\n          <Box flexGrow={1} mb={3} ml={step === 1 ? 2 : 0} mr={0} mt={3}>\n            {nextButton}\n          </Box>\n        )}\n      </Box>\n    );\n  };\n\n  return (\n    <div className={classes.app}>\n      <Navigation />\n      <Box display=\"flex\" flexDirection=\"row\" justifyContent=\"center\">\n        <Box className={classes.content} display=\"flex\" flexDirection=\"column\">\n          <StepTracker step={step} />\n          {stepContent()}\n          {getButtons()}\n        </Box>\n      </Box>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ReactorActionTypes, ReactorActionInterface } from '../actions';\r\nimport { ReactorState } from '../store';\r\n\r\nconst initialState: ReactorState = {\r\n  length: 2,\r\n  width: 2,\r\n  rods: []\r\n};\r\n\r\nfunction reactorReducer(\r\n  state: ReactorState = initialState,\r\n  action: ReactorActionInterface\r\n): ReactorState {\r\n  switch (action.type) {\r\n    case ReactorActionTypes.SetLength: {\r\n      return {\r\n        ...state,\r\n        length: action.length || 2\r\n      };\r\n    }\r\n    case ReactorActionTypes.SetWidth: {\r\n      return {\r\n        ...state,\r\n        width: action.width || 2\r\n      };\r\n    }\r\n    case ReactorActionTypes.SetRods: {\r\n      return {\r\n        ...state,\r\n        rods: action.rods || []\r\n      };\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n}\r\n\r\nexport default reactorReducer;\r\n","import { LanguageActionTypes, LanguageActionInterface } from '../actions';\r\nimport { LanguageState } from '../store';\r\n\r\nconst initialState: LanguageState = {\r\n  language: 'zh-Hans'\r\n};\r\n\r\nfunction LanguageReducer(\r\n  state: LanguageState = initialState,\r\n  action: LanguageActionInterface\r\n): LanguageState {\r\n  switch (action.type) {\r\n    case LanguageActionTypes.SetLanguage: {\r\n      return {\r\n        ...state,\r\n        language: action.language\r\n      };\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n}\r\n\r\nexport default LanguageReducer;\r\n","import { combineReducers } from 'redux';\r\n\r\nimport ReactorReducer from './ReactorReducer';\r\nimport LanguageReducer from './LanguageReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  reactor: ReactorReducer,\r\n  language: LanguageReducer\r\n});\r\n\r\nexport default rootReducer;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { Provider } from 'react-redux';\nimport { SnackbarProvider } from 'notistack';\nimport configureStore from './configureStore';\n\nconst store = configureStore();\nReactDOM.render(\n  <Provider store={store}>\n    <SnackbarProvider\n      anchorOrigin={{\n        vertical: 'bottom',\n        horizontal: 'center'\n      }}\n      preventDuplicate>\n      <App />\n    </SnackbarProvider>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { createStore } from 'redux';\r\nimport rootReducer from './reducers';\r\nimport persistState, { mergePersistedState } from 'redux-localstorage';\r\nimport adapter from 'redux-localstorage/lib/adapters/localStorage';\r\nimport filter from 'redux-localstorage-filter';\r\n\r\nexport default function configureStore() {\r\n  const reducer = mergePersistedState()(rootReducer);\r\n  const storage = filter(['reactor', 'language'])(adapter(window.localStorage));\r\n  const enhancer = persistState(storage, 'gt6-nuclear');\r\n  const store = createStore(reducer, enhancer);\r\n  return store;\r\n}\r\n"],"sourceRoot":""}